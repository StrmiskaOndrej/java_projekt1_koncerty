package koncerty;

import java.awt.BorderLayout;
import java.awt.Color;
import static java.awt.SystemColor.info;
import java.io.BufferedReader;
import java.io.FileReader;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import javax.swing.DefaultComboBoxModel;
import javax.swing.*;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author havelkova
 * @version 1.5
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Vytvoří nové GUI
     * @param evi evidence
     */
    public GUI(Evidence evi) {
        initComponents();
        initData(evi);
    }

    /**
     * Pomocná metoda inicializující frm
     * @param evi evidence
     */
    private void initData(Evidence evi){
        this.evi = evi;
        //vytvorSoubory();
        this.pozice = 0;
        this.pocetKoncertu = evi.getKoncerty().size();
        initZanr();
        if(pocetKoncertu == 0){
            return;
        }
        Koncert kon = evi.getKoncerty().get(pozice);
        zobrazKoncert(kon);
        nastavBarvyKomponent();
        editacniRezim(false);
        
        cboHudebnik.setModel(new DefaultComboBoxModel(evi.getHudebnici().toArray()));

    }
    
    /**
     * Metoda povolující editaci za předpokladu, že
     * parametr editace má hodnotu TRUE
     * @param editace 
     */
    private void editacniRezim(boolean editace){
        
        txtId.setEnabled(editace);        
        txtNazev.setEnabled(editace);
        cboHudebnik.setEnabled(editace);
        
        txtMesto.setEnabled(editace);
        txtCena.setEnabled(editace);
        
        txtDatum.setEnabled(editace);
        rbtUvnitr.setEnabled(editace);
        rbtVenku.setEnabled(editace);
        btnVpred.setEnabled(!editace);
        btnZpet.setEnabled(!editace);
        if(editace==false){                
        btnEdit.setText("edit");
        btnNovy.setText("+");            
        }  
        else{ 
        btnEdit.setText("uložit");
        btnNovy.setText("storno");              
        }

    }
    
    /**
     * Inicializace komboboxu žánrů
     */
    private void initZanr(){
        cboZanr.setModel(new DefaultComboBoxModel(Zanr.values()));
        cboZanr2.setModel(new DefaultComboBoxModel(Zanr.values()));
    }
    
    private void nastavBarvyKomponent(){
        txtId.setDisabledTextColor(Color.BLACK);        
        txtNazev.setDisabledTextColor(Color.BLACK);
//        txtHudebnik.setDisabledTextColor(Color.BLACK);
        txtMesto.setDisabledTextColor(Color.BLACK);
        txtDatum.setDisabledTextColor(Color.BLACK);
        txtCena.setDisabledTextColor(Color.BLACK);
        
        txtNazev.setDisabledTextColor(Color.BLACK);
        rbtVenku.setForeground(Color.BLACK);        
        rbtUvnitr.setForeground(Color.BLACK);    
    }
    
    /**
     * Metoda nastavující editační tlačítka
     */

    
    /**
     * Metoda nastavující prohlížecí tlačítka
     */

    
    
    Koncert aktualni;
    
    /**
     * Zobrazení koncertu na formuláři
     * @param k koncert
     */
    private void zobrazKoncert(Koncert k){
       
        
        if(k == null){
            return;
        }
        
        this.aktualni = k;
        
        txtId.setText(k.getId());
        txtNazev.setText(k.getAkce());
   //     txtHudebnik.setText(k.getHudebnik().toString());
        
        txtMesto.setText(k.getMisto().getMesto());
        cboZanr.setSelectedIndex(k.getHudebnik().getZanr().Kod());
   //     cboZanr2.setSelectedIndex(k.getHudebnik().getZanr().Kod());
        txtDatum.setText(String.format("%1$te. %1$tm. %1$tY", k.getDatum()));
        txtCena.setText(k.getCena() + "");
        cboHudebnik.setSelectedItem(k.getHudebnik());
        if(k.getMisto().getVenku()){
            rbtVenku.setSelected(true);
        }
        else{
            rbtUvnitr.setSelected(true);
        }                
    }    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnMisto = new javax.swing.ButtonGroup();
        tabGUI = new javax.swing.JTabbedPane();
        panEvidence = new javax.swing.JPanel();
        lblNazev = new javax.swing.JLabel();
        lblDatum = new javax.swing.JLabel();
        lblHudebnik = new javax.swing.JLabel();
        lblCena = new javax.swing.JLabel();
        txtNazev = new javax.swing.JTextField();
        panPozadi = new javax.swing.JPanel();
        btnZpet = new javax.swing.JButton();
        btnVpred = new javax.swing.JButton();
        btnNovy = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        txtDatum = new javax.swing.JTextField();
        txtCena = new javax.swing.JTextField();
        rbtVenku = new javax.swing.JRadioButton();
        rbtUvnitr = new javax.swing.JRadioButton();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        cboZanr = new javax.swing.JComboBox();
        lblZanr = new javax.swing.JLabel();
        lblMesto = new javax.swing.JLabel();
        txtMesto = new javax.swing.JTextField();
        cboHudebnik = new javax.swing.JComboBox();
        panVyhledavani = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        lblVysledky = new javax.swing.JLabel();
        btnHledej = new javax.swing.JButton();
        btnVymaz = new javax.swing.JButton();
        lblMistoV = new javax.swing.JLabel();
        lblZanrV = new javax.swing.JLabel();
        txtMistoV = new javax.swing.JTextField();
        lblHudebnikV = new javax.swing.JLabel();
        txtHudebnikV = new javax.swing.JTextField();
        cboZanr2 = new javax.swing.JComboBox();
        tabHudebnici = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txaHudebnici = new javax.swing.JTextArea();
        btnZobrazit = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuData = new javax.swing.JMenu();
        jMenuItemNacist = new javax.swing.JMenuItem();
        jMenuItemKonec = new javax.swing.JMenuItem();
        jMenuInfo = new javax.swing.JMenu();
        jMenuItemStatistika = new javax.swing.JMenuItem();
        jMenuItemOaplikaci = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("KONCERTY");

        tabGUI.setBackground(new java.awt.Color(0, 0, 0));

        panEvidence.setBackground(new java.awt.Color(255, 153, 0));

        lblNazev.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblNazev.setText("Název akce");

        lblDatum.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDatum.setText("Datum");

        lblHudebnik.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblHudebnik.setText("Hudebník");

        lblCena.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCena.setText("Cena");

        txtNazev.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtNazev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNazevActionPerformed(evt);
            }
        });

        panPozadi.setBackground(new java.awt.Color(102, 102, 102));

        btnZpet.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnZpet.setText("<<");
        btnZpet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZpetActionPerformed(evt);
            }
        });

        btnVpred.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnVpred.setText(">>");
        btnVpred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVpredActionPerformed(evt);
            }
        });

        btnNovy.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnNovy.setText("+");
        btnNovy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovyActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnEdit.setText("edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panPozadiLayout = new javax.swing.GroupLayout(panPozadi);
        panPozadi.setLayout(panPozadiLayout);
        panPozadiLayout.setHorizontalGroup(
            panPozadiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panPozadiLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnZpet, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnVpred, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnNovy, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        panPozadiLayout.setVerticalGroup(
            panPozadiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panPozadiLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panPozadiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVpred)
                    .addComponent(btnZpet)
                    .addComponent(btnNovy)
                    .addComponent(btnEdit))
                .addContainerGap())
        );

        txtDatum.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtDatum.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txtCena.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtCena.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        btnMisto.add(rbtVenku);
        rbtVenku.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rbtVenku.setText("Venku");
        rbtVenku.setOpaque(false);

        btnMisto.add(rbtUvnitr);
        rbtUvnitr.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rbtUvnitr.setText("Uvnitř");
        rbtUvnitr.setOpaque(false);

        lblId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblId.setText("Id akce");

        txtId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        cboZanr.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cboZanr.setEnabled(false);
        cboZanr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboZanrActionPerformed(evt);
            }
        });

        lblZanr.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblZanr.setText("Žánr");

        lblMesto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMesto.setText("Město");

        txtMesto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMestoActionPerformed(evt);
            }
        });

        cboHudebnik.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboHudebnik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboHudebnikActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panEvidenceLayout = new javax.swing.GroupLayout(panEvidence);
        panEvidence.setLayout(panEvidenceLayout);
        panEvidenceLayout.setHorizontalGroup(
            panEvidenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panPozadi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panEvidenceLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(panEvidenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNazev)
                    .addComponent(lblHudebnik)
                    .addComponent(lblDatum)
                    .addComponent(lblId)
                    .addComponent(lblZanr)
                    .addComponent(lblMesto))
                .addGap(33, 33, 33)
                .addGroup(panEvidenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panEvidenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(panEvidenceLayout.createSequentialGroup()
                            .addComponent(rbtVenku)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rbtUvnitr))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panEvidenceLayout.createSequentialGroup()
                            .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(27, 27, 27)
                            .addComponent(lblCena)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtNazev)
                        .addGroup(panEvidenceLayout.createSequentialGroup()
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(40, 40, 40))
                        .addComponent(cboZanr, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMesto))
                    .addComponent(cboHudebnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        panEvidenceLayout.setVerticalGroup(
            panEvidenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panEvidenceLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(panEvidenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panEvidenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNazev)
                    .addComponent(txtNazev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panEvidenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMesto)
                    .addComponent(txtMesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(panEvidenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHudebnik)
                    .addComponent(cboHudebnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panEvidenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cboZanr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblZanr))
                .addGap(18, 18, 18)
                .addGroup(panEvidenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDatum)
                    .addComponent(lblCena))
                .addGap(18, 18, 18)
                .addGroup(panEvidenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtVenku)
                    .addComponent(rbtUvnitr))
                .addGap(43, 43, 43)
                .addComponent(panPozadi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tabGUI.addTab("Evidence", panEvidence);

        panVyhledavani.setBackground(new java.awt.Color(255, 153, 0));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        lblVysledky.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblVysledky.setText("Výsledky vyhledávání");

        btnHledej.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnHledej.setText("Vyhledat");
        btnHledej.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHledejActionPerformed(evt);
            }
        });

        btnVymaz.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnVymaz.setText("Vymazat");

        lblMistoV.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMistoV.setText("Místo");

        lblZanrV.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblZanrV.setText("Žánr");

        txtMistoV.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtMistoV.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtMistoV.setText("název místa konání");

        lblHudebnikV.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblHudebnikV.setText("Hudebník");

        txtHudebnikV.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtHudebnikV.setText("jméno hudebníka");

        cboZanr2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout panVyhledavaniLayout = new javax.swing.GroupLayout(panVyhledavani);
        panVyhledavani.setLayout(panVyhledavaniLayout);
        panVyhledavaniLayout.setHorizontalGroup(
            panVyhledavaniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panVyhledavaniLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(panVyhledavaniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panVyhledavaniLayout.createSequentialGroup()
                        .addComponent(btnHledej)
                        .addGap(209, 209, 209)
                        .addComponent(btnVymaz))
                    .addGroup(panVyhledavaniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblVysledky)
                        .addGroup(panVyhledavaniLayout.createSequentialGroup()
                            .addGroup(panVyhledavaniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblHudebnikV)
                                .addComponent(lblMistoV))
                            .addGap(26, 26, 26)
                            .addGroup(panVyhledavaniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtMistoV, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                .addComponent(txtHudebnikV))
                            .addGap(38, 38, 38)
                            .addComponent(lblZanrV)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cboZanr2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        panVyhledavaniLayout.setVerticalGroup(
            panVyhledavaniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panVyhledavaniLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panVyhledavaniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMistoV)
                    .addComponent(txtMistoV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblZanrV)
                    .addComponent(cboZanr2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(panVyhledavaniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblHudebnikV)
                    .addComponent(txtHudebnikV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(lblVysledky)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panVyhledavaniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHledej)
                    .addComponent(btnVymaz))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        tabGUI.addTab("Vyhledávání", panVyhledavani);

        tabHudebnici.setBackground(new java.awt.Color(255, 153, 0));

        txaHudebnici.setColumns(20);
        txaHudebnici.setRows(5);
        jScrollPane3.setViewportView(txaHudebnici);

        btnZobrazit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnZobrazit.setText("Zobrazit hudebníky");
        btnZobrazit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZobrazitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabHudebniciLayout = new javax.swing.GroupLayout(tabHudebnici);
        tabHudebnici.setLayout(tabHudebniciLayout);
        tabHudebniciLayout.setHorizontalGroup(
            tabHudebniciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabHudebniciLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabHudebniciLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnZobrazit)
                .addGap(153, 153, 153))
        );
        tabHudebniciLayout.setVerticalGroup(
            tabHudebniciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabHudebniciLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnZobrazit)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        tabGUI.addTab("Hudebníci", tabHudebnici);

        jMenuData.setText("Data");

        jMenuItemNacist.setText("Načíst Data");
        jMenuItemNacist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNacistActionPerformed(evt);
            }
        });
        jMenuData.add(jMenuItemNacist);

        jMenuItemKonec.setText("Konec");
        jMenuItemKonec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemKonecActionPerformed(evt);
            }
        });
        jMenuData.add(jMenuItemKonec);

        jMenuBar1.add(jMenuData);

        jMenuInfo.setText("Info");

        jMenuItemStatistika.setText("Statistika");
        jMenuItemStatistika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemStatistikaActionPerformed(evt);
            }
        });
        jMenuInfo.add(jMenuItemStatistika);

        jMenuItemOaplikaci.setText("O aplikaci");
        jMenuItemOaplikaci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOaplikaciActionPerformed(evt);
            }
        });
        jMenuInfo.add(jMenuItemOaplikaci);

        jMenuBar1.add(jMenuInfo);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabGUI, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabGUI, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if(btnEdit.getText().equals("edit")){            
           editacniRezim(true);
        }
        else
        {
            //NOVÝ
            if(this.aktualni == null)
            {
                
                 Hudebnik vybranyHudebnik = (Hudebnik) cboHudebnik.getModel().getSelectedItem();                 
                 Misto noveMisto = new Misto("", txtMesto.getText(), rbtVenku.isSelected());           
                 this.aktualni = new Koncert(txtId.getText(), txtNazev.getText(), vybranyHudebnik, noveMisto, getCalendar(), Integer.parseInt(txtCena.getText()));
                 evi.zaradKoncert(aktualni);                        
                  
                 
                 this.pocetKoncertu = evi.getKoncerty().size();                 
                 this.pozice = this.pocetKoncertu -1;
                 
                 return;
            }
            
            
            
            //ÚPRAVA       
                     
            this.aktualni.setCena(Integer.parseInt(txtCena.getText()));
            
            boolean jeVenku = rbtVenku.isSelected();
            this.aktualni.getMisto().setVenku(jeVenku);
            this.aktualni.getMisto().setMesto(txtMesto.getText());
            this.aktualni.setDatum(getCalendar());
            editacniRezim(false);  
        }
    }//GEN-LAST:event_btnEditActionPerformed

    Calendar getCalendar(){
        
        Calendar cal = null;
        try
        {
             cal = Calendar.getInstance();

             SimpleDateFormat sdf = new SimpleDateFormat("dd. MM. yyyy");
             cal.setTime(sdf.parse(txtDatum.getText()));// all done
             int x = 1;
             this.aktualni.setDatum(cal);
        }
        catch(Exception e){
            System.err.println(e);
        }
        
        return cal;
    }
    
    
    private void btnNovyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovyActionPerformed
        if(btnNovy.getText().equals("+")){
            editacniRezim(true);
            txtId.setText("");
            txtNazev.setText("");
            txtMesto.setText("");
            cboHudebnik.setEnabled(true);
            cboZanr.setEnabled(true);
            txtDatum.setText("");       
            txtCena.setText("");
            rbtVenku.setEnabled(true);
            rbtUvnitr.setEnabled(true);
            
            
            
            this.aktualni = null;      
        }
        else
        {
           
            Koncert kon = evi.getKoncerty().get(pozice);
            zobrazKoncert(kon);
            editacniRezim(false);
            
        }
    }//GEN-LAST:event_btnNovyActionPerformed

    private void btnVpredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVpredActionPerformed
        if(pocetKoncertu == 0){
            return;
        }
        
        pozice = (pozice + 1) % pocetKoncertu;
        Koncert kon = evi.getKoncerty().get(pozice);
        zobrazKoncert(kon);
    }//GEN-LAST:event_btnVpredActionPerformed

    private void btnZpetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZpetActionPerformed
       if(pocetKoncertu == 0){
            return;
        }
        
        pozice = (pozice - 1 + pocetKoncertu) % pocetKoncertu;
        
        Koncert kon = evi.getKoncerty().get(pozice);
        zobrazKoncert(kon);
    }//GEN-LAST:event_btnZpetActionPerformed

    private void jMenuItemNacistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNacistActionPerformed
       try {
           
            BufferedReader reader = new BufferedReader(new FileReader("hudebnici.txt"));
             Hudebnik h=null;
            String radek = "";
            while ((radek = reader.readLine()) != null) {
                String[] parametry = radek.split(";");
                int id = Integer.parseInt(parametry[0]);
                
                if(parametry.length == 5){
                
                Zanr zanr = Zanr.values()[Integer.parseInt(parametry[3])];
                Stat stat = Stat.values()[Integer.parseInt(parametry[4])];
                  
                h = new Zpevak(id,parametry[1], parametry[2], zanr, stat);
                 
                }
                else if(parametry.length == 4){    
                Zanr zanr = Zanr.values()[Integer.parseInt(parametry[2])];
                Stat stat = Stat.values()[Integer.parseInt(parametry[3])];
                h = new Skupina(id, parametry[1], zanr, stat);                           
                }
                
                for(Hudebnik hud: evi.getHudebnici()){
                    System.out.println(evi.getHudebnici().size() + "bl");
                    
                 if(h.equals(hud)){
                     System.out.println("test2");
                     return;
                 }else{
                     System.out.println(h.getId());
                 evi.getHudebnici().add(h);
                 
                 }
                }
                
            }
            
            reader.close();
            
         
        } catch (Exception ex) {

            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItemNacistActionPerformed

    private void jMenuItemKonecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemKonecActionPerformed
System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemKonecActionPerformed

    private void jMenuItemOaplikaciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOaplikaciActionPerformed
JOptionPane.showMessageDialog(null, "Autor: Ondřej Strmiska\ndatum: 28.1.2016", "O Aplikaci", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemOaplikaciActionPerformed

    private void cboZanrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboZanrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboZanrActionPerformed

    private void btnHledejActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHledejActionPerformed
        jTextArea1.setText("");
        String misto = txtMistoV.getText();
        String hudebnik = txtHudebnikV.getText();
        Zanr zanr = (Zanr)cboZanr2.getSelectedItem();
     
        List<Koncert> koncerty = evi.getKoncerty();
        
        List<Koncert> odpovidajici = new ArrayList<>();
        
        
        List<Koncert> dleHudebnika = Koncert.koncertyHudebnika(koncerty, hudebnik);
        List<Koncert> dleZanru = Koncert.koncertyDleZanru(evi.getKoncerty(), zanr);
        List<Koncert> dleMista = Koncert.koncertyDleMista(evi.getKoncerty(), misto);
        
       
        for(Koncert k : koncerty){
            if(dleHudebnika.contains(k) && dleZanru.contains(k) && dleMista.contains(k))
                odpovidajici.add(k);
        }

        for(Koncert kon: odpovidajici){
            jTextArea1.append(kon.getHudebnik().getJmeno() + ", " +kon.getMisto().getMesto() +"\n");
        }
    
    }//GEN-LAST:event_btnHledejActionPerformed

  
    
    private void jMenuItemStatistikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemStatistikaActionPerformed
        JFrame jf = new JFrame();
        jf.setVisible(true);
        jf.setSize(200,200);
        JLabel label1 = new JLabel("Počet koncertů: "+evi.getKoncerty().size());
        JLabel label2 = new JLabel("Počet skupin: "+evi.getPocetSkupin());
        JLabel label3 = new JLabel("Počet hudebníků: "+evi.getHudebnici().size());
        JPanel panel = new JPanel();
        jf.add(panel);
        panel.add(label1);
        panel.add(label2);
        panel.add(label3);
    }//GEN-LAST:event_jMenuItemStatistikaActionPerformed

    private void cboHudebnikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboHudebnikActionPerformed
        Hudebnik vybranyHudebnik = (Hudebnik) cboHudebnik.getModel().getSelectedItem();
        cboZanr.setSelectedIndex(vybranyHudebnik.getZanr().Kod());
    }//GEN-LAST:event_cboHudebnikActionPerformed

    private void btnZobrazitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZobrazitActionPerformed
          try {
           txaHudebnici.setText("");
            BufferedReader reader = new BufferedReader(new FileReader("hudebnici.txt"));
             Hudebnik h=null;
            String radek = "";
            while ((radek = reader.readLine()) != null) {
                String[] parametry = radek.split(";");
                int id = Integer.parseInt(parametry[0]);
                
                if(parametry.length == 5){
                int idZanru = Integer.parseInt(parametry[3]);   
                int idStatu = Integer.parseInt(parametry[4]); 
                Zanr zanr = Zanr.values()[idZanru];
                Stat stat = Stat.values()[idStatu];
                  
                h = new Zpevak(id,parametry[1], parametry[2], zanr, stat);
                    
                 
                }
                else if(parametry.length == 4){
                int idZanru = Integer.parseInt(parametry[2]);   
                int idStatu = Integer.parseInt(parametry[3]);     
                Zanr zanr = Zanr.values()[idZanru];
                Stat stat = Stat.values()[idStatu];
                h = new Skupina(id, parametry[1], zanr, stat);                           
                }            
                txaHudebnici.append(h.getJmeno()+" "+h.getZanr()+" "+h.getStat() +"\n");
                
            }
            
            reader.close();
            

        } catch (Exception ex) {

            ex.printStackTrace();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnZobrazitActionPerformed

    private void txtNazevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNazevActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNazevActionPerformed

    private void txtMestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMestoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMestoActionPerformed


    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {                
                new GUI(new Evidence()).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHledej;
    private javax.swing.ButtonGroup btnMisto;
    private javax.swing.JButton btnNovy;
    private javax.swing.JButton btnVpred;
    private javax.swing.JButton btnVymaz;
    private javax.swing.JButton btnZobrazit;
    private javax.swing.JButton btnZpet;
    private javax.swing.JComboBox cboHudebnik;
    private javax.swing.JComboBox cboZanr;
    private javax.swing.JComboBox cboZanr2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuData;
    private javax.swing.JMenu jMenuInfo;
    private javax.swing.JMenuItem jMenuItemKonec;
    private javax.swing.JMenuItem jMenuItemNacist;
    private javax.swing.JMenuItem jMenuItemOaplikaci;
    private javax.swing.JMenuItem jMenuItemStatistika;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblCena;
    private javax.swing.JLabel lblDatum;
    private javax.swing.JLabel lblHudebnik;
    private javax.swing.JLabel lblHudebnikV;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblMesto;
    private javax.swing.JLabel lblMistoV;
    private javax.swing.JLabel lblNazev;
    private javax.swing.JLabel lblVysledky;
    private javax.swing.JLabel lblZanr;
    private javax.swing.JLabel lblZanrV;
    private javax.swing.JPanel panEvidence;
    private javax.swing.JPanel panPozadi;
    private javax.swing.JPanel panVyhledavani;
    private javax.swing.JRadioButton rbtUvnitr;
    private javax.swing.JRadioButton rbtVenku;
    private javax.swing.JTabbedPane tabGUI;
    private javax.swing.JPanel tabHudebnici;
    private javax.swing.JTextArea txaHudebnici;
    private javax.swing.JTextField txtCena;
    private javax.swing.JTextField txtDatum;
    private javax.swing.JTextField txtHudebnikV;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMesto;
    private javax.swing.JTextField txtMistoV;
    private javax.swing.JTextField txtNazev;
    // End of variables declaration//GEN-END:variables
    private Evidence evi;
    private int pozice;
    private int pocetKoncertu;
}
